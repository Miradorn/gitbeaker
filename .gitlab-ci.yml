default:
  image: node:lts-alpine

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - packages/core/node_modules/
    - packages/cli/node_modules/
    - node_modules/

stages:
  - install
  - lint
  - build
  - test
  - release

#Link and Install all required dependancies
install:
  image: node:lts
  stage: install
  script:
    - yarn

# Lint all code, tests and supporting documentation (README, CHANGELOG etc)
lint:src:
  stage: lint
  script: yarn run lint

lint:docs:
  stage: lint
  script: yarn run lint:doc

# Build core (cjs, es, and browser) and cli packages
# Uses work around to allow for linking of the cli packages
build:
  stage: build
  script:
    - yarn run build
  artifacts:
    paths:
      - packages/core/dist/
      - packages/cli/dist/

# Test packages and builds
test:core:unit:
  stage: test
  script: yarn jest core/test/unit && yarn codecov

test:core-cjs:integration: &integration
  image:
    name: docker/compose:latest
    entrypoint: ['/bin/sh', '-c']
  variables:
    DOCKER_HOST: tcp://docker:2375
    GITLAB_URL: http://docker:8080
  services:
    - docker:dind
  stage: test
  before_script:
    # Install docker compose
    - apk add --no-cache nodejs yarn git

    # Spin up container
    - cd scripts
    - docker-compose -f docker-compose.yml up -d

    # Verify Gitlab instance is up and running
    - node probe.js

    # Get the personal token
    - export PERSONAL_ACCESS_TOKEN=$(docker exec -i gitlab sh -c 'gitlab-rails r /mnt/init.rb')

    - cd ..
    - echo $PERSONAL_ACCESS_TOKEN
    - echo $GITLAB_URL
    - echo $CODECOV_TOKEN
  script: yarn jest core/test/integration --runInBand && yarn codecov

test:cli:integration:
  <<: *integration
  script: yarn jest core/test/integration --runInBand && yarn codecov

# test:core-es:integration:
#   <<: *integration
#   script: yarn jest core/test/integration --runInBand --moduleNameMapper="{dist:dist/index.es.js}"

# test:core-browser:integration:
#   <<: *integration
#   script: npm run test:integration -- --scope=core --moduleNameMapper="{dist:dist/index.umd.js}" && codecov

# Release
release:
  only:
    refs:
      - master
  stage: release
  script: yarn release
